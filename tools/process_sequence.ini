[ProcessSequenceConfig]

; Set to true if the arrows are 180 degrees the wrong way
; Default: false
Flipped = false

; The distance in meters that images are considered neighbors
; Default: 9
NeighborDistanceCutoff = 9

; The distance in meters that images are optimally separated by
; This means that if there are neighbors that are both within the NeighborPruneAngle (another option),
;   then the image closer to this distance will be chosen as the neighbor to keep
; Default: 4
OptimalNeighborDistance = 4

; How much to offset the vertical by to correct the camera from pointing down or up slightly
; This was just a value I chose that seems to work pretty well which offsets the camera
;   up by 13.5 degrees since it was consistently pointing downward most of the time
; Default: 13.5
HorizonCorrection = 13.5

; Shows the compass if set to true
; Note: The compass is not accurate in the slightest!
;   The compass is only aligned to the first image as north, so unless the first image is facing north, then it is inaccurate!
; Default: false
ShowCompass = false

; Set to true to see the image uuid on the viewer
; Really only used for debugging
; Default: false
ShowTitle = false

; How much time in ms the transition is between images
; Default: 1000
FadeDuration = 1000

; Default starting horizontal fov
; Default: 120.0
HFov = 120.0

; The vertical pitch in degrees where the navigation arrows are located
; The value set is the degrees relative to the horizon
; Default: -30.0
ArrowPitch = -25.0

; If navigation arrows are closer than this value, then only the further (in terms of distance) image is retained
; This is to prevent arrows overlapping on top of one another
; Default: 20
NeighborPruneAngle = 20

; This value is the angle that is acceptable for the previous image to have influence on the bearing of the next image
; This is used to smooth out interpolating direction of images
; Default 45
PrevImageBearingInfluenceCutoffAngle = 45
