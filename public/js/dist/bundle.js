!function(t){"use strict";const e={kilometers:1,miles:1e3/1609.344,nauticalmiles:1e3/1852,meters:1e3,metres:1e3,yards:1e3/.9144,feet:1e3/.3048,inches:1e3/.0254},i=1/298.257223563,n=i*(2-i),s=Math.PI/180;class r{static fromTile(t,e,i){const n=Math.PI*(1-2*(t+.5)/Math.pow(2,e)),a=Math.atan(.5*(Math.exp(n)-Math.exp(-n)))/s;return new r(a,i)}static get units(){return e}constructor(t,i){if(void 0===t)throw new Error("No latitude given.");if(i&&!e[i])throw new Error(`Unknown unit ${i}. Use one of: ${Object.keys(e).join(", ")}`);const r=6378.137*s*(i?e[i]:1),a=Math.cos(t*s),o=1/(1-n*(1-a*a)),h=Math.sqrt(o);this.kx=r*h*a,this.ky=r*h*o*(1-n)}distance(t,e){const i=h(t[0]-e[0])*this.kx,n=(t[1]-e[1])*this.ky;return Math.sqrt(i*i+n*n)}bearing(t,e){const i=h(e[0]-t[0])*this.kx,n=(e[1]-t[1])*this.ky;return Math.atan2(i,n)/s}destination(t,e,i){const n=i*s;return this.offset(t,Math.sin(n)*e,Math.cos(n)*e)}offset(t,e,i){return[t[0]+e/this.kx,t[1]+i/this.ky]}lineDistance(t){let e=0;for(let i=0;i<t.length-1;i++)e+=this.distance(t[i],t[i+1]);return e}area(t){let e=0;for(let i=0;i<t.length;i++){const n=t[i];for(let t=0,s=n.length,r=s-1;t<s;r=t++)e+=h(n[t][0]-n[r][0])*(n[t][1]+n[r][1])*(i?-1:1)}return Math.abs(e)/2*this.kx*this.ky}along(t,e){let i=0;if(e<=0)return t[0];for(let n=0;n<t.length-1;n++){const s=t[n],r=t[n+1],a=this.distance(s,r);if(i+=a,i>e)return o(s,r,(e-(i-a))/a)}return t[t.length-1]}pointToSegmentDistance(t,e,i){let[n,s]=e,r=h(i[0]-n)*this.kx,a=(i[1]-s)*this.ky,o=0;return 0===r&&0===a||(o=(h(t[0]-n)*this.kx*r+(t[1]-s)*this.ky*a)/(r*r+a*a),o>1?(n=i[0],s=i[1]):o>0&&(n+=r/this.kx*o,s+=a/this.ky*o)),r=h(t[0]-n)*this.kx,a=(t[1]-s)*this.ky,Math.sqrt(r*r+a*a)}pointOnLine(t,e){let i,n,s,r,a=1/0;for(let o=0;o<t.length-1;o++){let l=t[o][0],_=t[o][1],d=h(t[o+1][0]-l)*this.kx,c=(t[o+1][1]-_)*this.ky,u=0;0===d&&0===c||(u=(h(e[0]-l)*this.kx*d+(e[1]-_)*this.ky*c)/(d*d+c*c),u>1?(l=t[o+1][0],_=t[o+1][1]):u>0&&(l+=d/this.kx*u,_+=c/this.ky*u)),d=h(e[0]-l)*this.kx,c=(e[1]-_)*this.ky;const g=d*d+c*c;g<a&&(a=g,i=l,n=_,s=o,r=u)}return{point:[i,n],index:s,t:Math.max(0,Math.min(1,r))}}lineSlice(t,e,i){let n=this.pointOnLine(i,t),s=this.pointOnLine(i,e);if(n.index>s.index||n.index===s.index&&n.t>s.t){const t=n;n=s,s=t}const r=[n.point],o=n.index+1,h=s.index;!a(i[o],r[0])&&o<=h&&r.push(i[o]);for(let t=o+1;t<=h;t++)r.push(i[t]);return a(i[h],s.point)||r.push(s.point),r}lineSliceAlong(t,e,i){let n=0;const s=[];for(let r=0;r<i.length-1;r++){const a=i[r],h=i[r+1],l=this.distance(a,h);if(n+=l,n>t&&0===s.length&&s.push(o(a,h,(t-(n-l))/l)),n>=e)return s.push(o(a,h,(e-(n-l))/l)),s;n>t&&s.push(h)}return s}bufferPoint(t,e){const i=e/this.ky,n=e/this.kx;return[t[0]-n,t[1]-i,t[0]+n,t[1]+i]}bufferBBox(t,e){const i=e/this.ky,n=e/this.kx;return[t[0]-n,t[1]-i,t[2]+n,t[3]+i]}insideBBox(t,e){return h(t[0]-e[0])>=0&&h(t[0]-e[2])<=0&&t[1]>=e[1]&&t[1]<=e[3]}}function a(t,e){return t[0]===e[0]&&t[1]===e[1]}function o(t,e,i){const n=h(e[0]-t[0]),s=e[1]-t[1];return[t[0]+n*i,t[1]+s*i]}function h(t){for(;t<-180;)t+=360;for(;t>180;)t-=360;return t}const l={useURLHashing:!1,onSceneChangeFunc:null,onGeoChangeFunc:null,onHotSpotClickFunc:null,onInitDoneFunc:null,onArrowsAddedFunc:null,navArrowMinAngle:-25,navArrowMaxAngle:-20,imageFetchType:"standard"};function _(t){return t<0&&(t=360+t),t}function d(t,e){return t-Math.floor(t/e)*e}const c="https://trailview.cmparks.net";t.DefaultTrailViewerOptions=l,t.TrailViewer=class{_options;_initImageId;_panViewer=null;_infoJson=null;_geo={latitude:0,longitude:0};_prevNorthOffset=0;_prevYaw=0;_currImg;_dataArr;_dataIndex={};_sceneList=[];_hotSpotList=[];_prevImg=null;_navArrowMinAngle;_navArrowMaxAngle;_prevNavClickedYaw=0;_initLat;_initLng;_imageFetchType;optimalDist=4;neighborDistCutoff=10;pruneAngle=25;_firstScene=null;constructor(t,e,i=null,n=null,s=null){return null===t&&(t=l),this._options=t,this._initImageId=e,this._currImg=e,null!==i?this._dataArr=i:(this._dataArr=null,this._fetchData().then((t=>{if(this._dataArr=t,null!==this._panViewer)this._initViewer();else{for(let t=0;t<this._dataArr.length;t++)this._dataIndex[this._dataArr[t].id]=t;this.goToImageID(this.getCurrentImageID(),!0)}}))),this._navArrowMinAngle=t.navArrowMinAngle,this._navArrowMaxAngle=t.navArrowMaxAngle,this._initLat=n,this._initLng=s,this._imageFetchType=t.imageFetchType,null===this._navArrowMinAngle&&(this._navArrowMinAngle=l.navArrowMinAngle),null===this._navArrowMaxAngle&&(this._navArrowMaxAngle=l.navArrowMaxAngle),null===this._dataArr?this._fetchData():this._initViewer(),this}getOptions(){return this._options}setData(t){this._dataArr=t;for(let t=0;t<this._dataArr.length;t++)this._dataIndex[this._dataArr[t].id]=t;for(let t=0;t<this._hotSpotList.length;t++)this._panViewer.removeHotSpot(this._hotSpotList[t],this._currImg);for(let t=0;t<this._sceneList.length;t++)this._panViewer.removeScene(this._sceneList[t]);this._addSceneToViewer(this._dataArr[this._dataIndex[this._currImg.id]]),this.goToImageID(this._currImg.id)}getCurrentImageID(){return this._currImg.id}getFlipped(){return this._currImg.flipped}getCurrentSequenceName(){return this._currImg.sequenceName}_createViewerConfig(t){return{default:{firstScene:t,sceneFadeDuration:1500,compass:!1,autoLoad:!0,showControls:!1,crossOrigin:"use-credentials"},scenes:{}}}_addSceneToConfig(t,e){return t.scenes[String(e.id)]={horizonPitch:e.pitchCorrection,hfov:120,yaw:0,northOffset:e.bearing,type:"multires",multiRes:{basePath:c+"/trails/"+e.sequenceName+"/img/"+e.id,path:"/%l/%s%y_%x",extension:"jpg",tileResolution:512,maxLevel:3,cubeResolution:1832}},t}_addSceneToViewer(t,e=null){this._sceneList.push(t.id);let i=t.pitchCorrection,n=180;t.flipped||(i*=-1,n=0);let s=t.bearing;t.flipped||(s=d(s+180,360));let r={horizonPitch:i,hfov:120,yaw:n,northOffset:s,type:"multires",multiRes:{basePath:c+"/trails/"+t.sequenceName+"/img/"+t.id,path:"/%l/%s%y_%x",fallbackPath:"/fallback/%s",extension:"jpg",tileResolution:512,maxLevel:3,cubeResolution:1832,shtHash:e}};return null!=e&&(r.multiRes.shtHash=e),this._panViewer.addScene(t.id,r),this}async _addNeighborsToViewer(t,e=!1){let i=this;for(let n=0;n<t.length;n++){const s=await fetch(`${c}/api/preview.php`,{method:"GET",body:JSON.stringify({id:t[n].id})}),r=await s.json();i._addSceneToViewer(t[n],r.preview),i._hotSpotList.push(t[n].id);let a=i._navArrowMinAngle,o=i._navArrowMaxAngle,h=-(o-a-t[n].distance*(o-a)/9)+o,l=t[n].neighborBearing;e||(l=d(t[n].neighborBearing+180,360)),i._panViewer.addHotSpot({id:t[n].id,pitch:h,yaw:l,cssClass:"custom-hotspot",type:"scene",clickHandlerFunc:i._onNavArrowClick,clickHandlerArgs:{this:i,id:t[n].id,yaw:t[n].neighborBearing,pitch:h}})}null!==i._options.onArrowsAddedFunc&&i._options.onArrowsAddedFunc(i._panViewer.getConfig().hotSpots)}_onNavArrowClick(t,e){e.this._prevNavClickedYaw=e.yaw,e.this._panViewer.loadScene(e.id,"same","same","same")}_customMod(t,e){return t-Math.floor(t/e)*e}_getNeighbors(t){const e=new r(41,"meters");let i=[];if(null===this._dataArr)return null;for(let n=0;n<this._dataArr.length;n++){if(this._dataArr[n].id==t.id)continue;let s=e.distance([t.longitude,t.latitude],[this._dataArr[n].longitude,this._dataArr[n].latitude]);if(s<=this.neighborDistCutoff){let r=e.bearing([t.longitude,t.latitude],[this._dataArr[n].longitude,this._dataArr[n].latitude]);r<0&&(r+=360);let a=this._customMod(this._customMod(r-t.bearing,360)+180,360),o=!1;for(let t=0;t<i.length;t++){let e=i[t],n=this._customMod(e.neighborBearing-a+180,360)-180;Math.abs(n)<this.pruneAngle&&(Math.abs(this.optimalDist-s)<Math.abs(this.optimalDist-e.distance)?i[t]=null:o=!0)}i=i.filter((function(t){return null!=t})),0==o&&i.push({sequenceName:this._dataArr[n].sequenceName,id:this._dataArr[n].id,bearing:this._dataArr[n].bearing,neighborBearing:a,flipped:this._dataArr[n].flipped,distance:s,latitude:this._dataArr[n].latitude,longitude:this._dataArr[n].longitude,shtHash:this._dataArr[n].shtHash,pitchCorrection:this._dataArr[n].pitchCorrection})}}return i}_initViewer(){if(null===this._dataArr)return void console.error("Cannot initialize viewer because dataArr is null");for(let t=0;t<this._dataArr.length;t++)this._dataIndex[this._dataArr[t].id]=t;null==this._initImageId?this._initLat&&this._initLng?this._firstScene=this.getNearestImageId(this._initLat,this._initLng,Number.MAX_SAFE_INTEGER):this._firstScene=this._dataArr[0].id:this._firstScene=this._initImageId;let t=this._createViewerConfig(this._firstScene);this._currImg=this._dataArr[this._dataIndex[this._firstScene]],t=this._addSceneToConfig(t,this._currImg),this._sceneList.push(this._currImg.id),this._panViewer=pannellum.viewer("panorama",t);let e=this;this._panViewer.on("scenechange",(function(t){e._onSceneChange(t)})),this._onSceneChange(this._panViewer.getScene()),this._currImg.flipped?this._panViewer.setYaw(180,!1):this._panViewer.setYaw(0,!1);let i=this._getNeighbors(this._currImg);if(null!==i){for(let t=0;t<this._hotSpotList.length;t++)this._panViewer.removeHotSpot(this._hotSpotList[t]);this._addNeighborsToViewer(i,this._currImg.flipped),null!==this._options.onInitDoneFunc&&this._options.onInitDoneFunc(this)}}async _fetchData(){let t=this;if("standard"==this._imageFetchType){const t=await fetch(`${c}/api/images.php?type=standard`);return(await t.json()).imagesStandard}{const e=await fetch(`${c}/api/images.php?type=all`),i=await e.json();return t._dataArr=i.imagesAll,i.imagesAll}}_getNearestHotspot(t){let e=this._panViewer.getConfig().hotSpots;if(!e)return null;let i,n=e[0];for(let s=0;s<e.length;s++){let r=Math.abs(this._customMod(_(e[s].yaw)-t+180,360)-180);i=Math.abs(this._customMod(_(n.yaw)-t+180,360)-180),r<i&&(n=e[s],i=r)}return n}_onSceneChange(t){if(null===this._dataArr)return void console.error("Error on scene change, dataArr is null");this._currImg=this._dataArr[this._dataIndex[t]],this._prevYaw=this._panViewer.getYaw();let e=((this._prevNorthOffset-this._panViewer.getNorthOffset())%360+this._prevYaw)%360;this._panViewer.setYaw(e,!1),this._prevNorthOffset=this._panViewer.getNorthOffset(),this._geo.latitude=this._dataArr[this._dataIndex[t]].latitude,this._geo.longitude=this._dataArr[this._dataIndex[t]].longitude,null!==this._options.onGeoChangeFunc&&this._options.onGeoChangeFunc(this._geo);for(let t=0;t<this._hotSpotList.length;t++)this._panViewer.removeHotSpot(this._hotSpotList[t],this._prevImg);this._hotSpotList=[];let i=document.getElementsByClassName("pnlm-hotspot-base");for(let t=0;t<i.length;t++)i[t].remove();let n=this._getNeighbors(this._dataArr[this._dataIndex[t]]),s=[t];if(null!==n)for(let t=0;t<n.length;t++)s.push(n[t].id);for(let t=0;t<this._sceneList.length;t++)s.includes(this._sceneList[t])||this._panViewer.removeScene(this._sceneList[t]);this._sceneList=s,this._prevImg=this._currImg,null!==n&&this._addNeighborsToViewer(n,this._currImg.flipped),null!==this._options.onSceneChangeFunc&&this._options.onSceneChangeFunc(this._currImg)}getNearestImageId(t,e,i=10){const n=new r(41,"meters");let s=Number.MAX_SAFE_INTEGER,a=null;if(null===this._dataArr)return null;for(let r=0;r<this._dataArr.length;r++){let o=n.distance([e,t],[this._dataArr[r].longitude,this._dataArr[r].latitude]);o<i&&o<s&&(a=this._dataArr[r].id,s=o)}return a}getImageGeo(){return this._geo}destroy(){null!==this._panViewer&&this._panViewer.destroy()}getBearing(){return(this._panViewer.getNorthOffset()+this._panViewer.getYaw()+180)%360}_createLocalInfo(t){if(null!=this._infoJson)for(let t=0;t<this._infoJson.ImgInfo.length;t++)null!=this._panViewer&&this._panViewer.removeHotSpot(this._infoJson.ImgInfo[t].ID,this._infoJson.ImgInfo[t].ImageID);this._infoJson=t;let e=this;for(let i=0;i<t.ImgInfo.length;i++){let n=t.ImgInfo[i];null!=this._panViewer&&this._panViewer.addHotSpot({id:n.ID,pitch:n.Pitch,yaw:n.Yaw,type:"info",text:n.HoverText,clickHandlerFunc:e._onHotSpotClicked,clickHandlerArgs:[e,n.ID]},n.ImageID)}}_onHotSpotClicked(t,e){"onHotSpotClickFunc"in e[0]._options&&e[0]._options.onHotSpotClickFunc(e[1])}async goToImageID(t,e=!1){if(e||!this._sceneList.includes(t)){if(e){for(let t=0;t<this._sceneList.length;t++)this._panViewer.removeScene(this._sceneList[t]);this._sceneList=[]}let i=this;const n=await fetch(`${c}/api/preview.php`,{method:"GET",body:JSON.stringify({id:t})}),s=await n.json();null!==i._dataArr&&i._addSceneToViewer(i._dataArr[i._dataIndex[t]],s.preview),i._panViewer.loadScene(t,"same","same","same")}else this._panViewer.loadScene(t,"same","same","same");return this}}}({});
